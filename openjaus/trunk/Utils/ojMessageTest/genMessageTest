#!/bin/sh

exec > messageTest.c

SOURCE_C_FILES=`find ../OpenJaus3.3.0b/libjaus/src/ -name "*.c" | grep /message/`
for cfile in $SOURCE_C_FILES
do
	ofile=${cfile##*/}
	ofile=${ofile%.c}
	MESSAGES="$MESSAGES$ofile\n"
done

echo "#include <stdio.h>"
echo "#include <jaus.h>\n"
echo "int main(void)"
echo "{"
echo "\tchar *msgStr = NULL;"

for message in `echo $MESSAGES`
do
	msgType=`expr substr $message 1 1 | tr [:lower:] [:upper:]`
	length=`expr length $message`
	msgBody=`expr substr $message 2 $length`
	echo "\t$msgType$msgBody $message;"
done

echo "\n"

for message in `echo $MESSAGES`
do
	msgType=`expr substr $message 1 1 | tr [:lower:] [:upper:]`
	length=`expr length $message`
	msgBody=`expr substr $message 2 $length`
	msgType="$msgType$msgBody"

	echo "\tprintf(\"Testing ${message}:\\\n\");"
	echo "\t$message = ${message}Create();"
	echo "\tif($message == NULL)"
	echo "\t{"
	echo "\t\tprintf(\"${message}Create failed\\\n\");"
	echo "\t}"
	echo "\telse"
	echo "\t{"
	echo "\t\tmsgStr = ${message}ToString($message);"
	echo "\t\tprintf(\"%s\\\n\", msgStr);"
	echo "\t\tfree(msgStr);"
	echo "\t\tjausMessage = ${message}ToJausMessage($message);"
	echo "\t\t${message}Destroy($message);"
	echo "\t\tif(jausMessage->dataSize == 0)"
	echo "\t\t{"
	echo "\t\t\tprintf(\"${message}ToJausMessage failed\\\n\");"
	echo "\t\t}"
	echo "\t\telse"
	echo "\t\t{"
	echo "\t\t\t$message = ${message}FromJausMessage(jausMessage);"
	echo "\t\t\tif($message == NULL)"
	echo "\t\t\t{"
	echo "\t\t\t\tprintf(\"${message}FromJausMessage failed\\\n\");"
	echo "\t\t\t}"
	echo "\t\t\telse"
	echo "\t\t\t{"
	echo "\t\t\t\t${message}Destroy($message);"
	echo "\t\t\t}"
	echo "\t\t}"
	echo "\t\tjausMessageDestroy(jausMessage);"
	echo "\t}"
	echo "\tprintf(\"\\\n\");"
	echo
done

echo "\treturn 0;"
echo "}"
